gap> bins := BinsByGT(2,6);^^J[ [ 156, 158, 160 ], [ 155, 157 ], [ 173, 176 ], [ 179, 180 ], [ 20, 22 ] ]^^Jgap> List(bins, bin -> MIPSplitGroupsByAlgebras(2, 6, bin));^^J[ rec( bins := [  ], splits := [ [ 7, [ 156, 158, 160 ] ] ], time := 2195 ),^^J  rec( bins := [  ], splits := [ [ 7, [ 155, 157 ] ] ], time := 1505 ),^^J  rec( bins := [  ], splits := [ [ 7, [ 173, 176 ] ] ], time := 3294 ),^^J  rec( bins := [  ], splits := [ [ 7, [ 179, 180 ] ] ], time := 3233 ),^^J  rec( bins := [  ], splits := [ [ 4, [ 20, 22 ] ] ], time := 160 ) ]
gap> bins := BinsByGTAllFields(2,6);^^J[ [ 156, 158, 160 ], [ 155, 157 ], [ 173, 176 ], [ 179, 180 ], [ 104, 105 ],^^J  [ 13, 14 ], [ 20, 22 ], [ 18, 19 ] ]^^Jgap> List(bins, bin -> MIPSplitGroupsByAlgebras(2, 6, bin, 2));^^J[ rec( bins := [  ], splits := [ [ 7, [ 156, 158, 160 ] ] ], time := 34833 ),^^J  rec( bins := [  ], splits := [ [ 7, [ 155, 157 ] ] ], time := 22479 ),^^J  rec( bins := [  ], splits := [ [ 7, [ 173, 176 ] ] ], time := 9806 ),^^J  rec( bins := [  ], splits := [ [ 7, [ 179, 180 ] ] ], time := 7819 ),^^J  rec( bins := [  ], splits := [ [ 4, [ 104, 105 ] ] ], time := 2226 ),^^J  rec( bins := [  ], splits := [ [ 6, [ 13, 14 ] ] ], time := 707 ),^^J  rec( bins := [  ], splits := [ [ 6, [ 20, 22 ] ] ], time := 3917 ),^^J  rec( bins := [  ], splits := [ [ 6, [ 18, 19 ] ] ], time := 2891 ) ]^^J
R := SmallGroup(64, 19);^^JQ := SmallGroup(64, 18);^^J^^JDR := DirectProduct(R,Q);^^JGDR := GeneratorsOfGroup(DR);^^Jz1 := GDR[3];^^Jz2 := GDR[9];^^JN := Group(z1*z2^(-1));^^JG := DR/N;^^J^^JDR := DirectProduct(Q,Q);^^JGDR := GeneratorsOfGroup(DR);^^Jz1 := GDR[3];^^Jz2 := GDR[9];^^JN := Group(z1*z2^(-1));^^JH := DR/N;^^J^^Jgap> MIPSplitGroupsByGroupTheoreticalInvariantsAllFields([G,H]);^^J[ [ Group([ f1, f2, f7, f3, f4, f10, f5, f6, f7, f8, f9, f10 ]),^^J      Group([ f1, f2, f7, f3, f4, f10, f5, f6, f7, f8, f9, f10 ]) ] ]^^J^^J# the groups can not be split over all fields by group-theoretical invariants^^J^^Jgap> MIPSplitGroupsByAlgebras([G,H]);^^Jrec( bins := [  ],^^J  splits :=^^J    [^^J      [ 4,^^J          [ Group([ f1, f2, f7, f3, f4, f10, f5, f6, f7, f8, f9, f10 ]),^^J              Group([ f1, f2, f7, f3, f4, f10, f5, f6, f7, f8, f9, f10 ]) ] ]^^J     ], time := 44473 )^^J^^J# over the field of 2 elements it is enough to consider^^J# the 5-th power of the augmentation ideal^^J
gap> SetInfoLevel(InfoModIsom, 1);^^Jgap> MIPSplitGroupsByAlgebras([G,H], 2);^^J#I  Refine bin^^J#I    Weights yields bins [ [ 1, 2 ] ]^^J#I    Layer 1 yields bins [ [ 1, 2 ] ]^^J#I  layer 2 of dim 15 aut group has order 2961100800 * 2^0^^J#I     cover is determined^^J#I     dim(M) = 16 and dim(U) = 5^^J#I     extended autos^^J#I     computed stabilizer^^J#I     got quotient^^J#I     induced autos^^J#I  layer 2 of dim 15 aut group has order 2961100800 * 2^0^^J#I     cover is determined^^J#I     dim(M) = 16 and dim(U) = 5^^J#I     extended autos^^J#I     computed stabilizer^^J#I     got quotient^^J#I     induced autos^^J#I    Layer 2 yields bins [ [ 1, 2 ] ]^^J#I  layer 3 of dim 39 aut group has order 2937600 * 2^88^^J#I     cover is determined^^J#I     dim(M) = 29 and dim(U) = 5^^J#I     extended autos^^J#I     computed stabilizer^^J#I     got quotient^^J#I     induced autos^^J#I  layer 3 of dim 39 aut group has order 2937600 * 2^88^^J#I     cover is determined^^J#I     dim(M) = 29 and dim(U) = 5^^J#I     extended autos^^J#I     computed stabilizer^^J#I     got quotient^^J#I     induced autos^^J#I    Layer 3 yields bins [ [ 1, 2 ] ]^^J#I  layer 4 of dim 81 aut group has order 2937600 * 2^240^^J#I     cover is determined^^J#I     dim(M) = 51 and dim(U) = 9^^J#I     extended autos^^J#I     computed stabilizer^^J#I     got quotient^^J#I     induced autos^^J#I  layer 4 of dim 81 aut group has order 2937600 * 2^240^^J#I     cover is determined^^J#I     dim(M) = 51 and dim(U) = 9^^J#I     extended autos^^J#I     computed stabilizer^^J#I     got quotient^^J#I     induced autos^^J#I    Layer 4 yields bins [ [ 1, 2 ] ]^^J#I  layer 5 of dim 145 aut group has order 7200 * 2^496^^J#I     cover is determined^^J#I     dim(M) = 73 and dim(U) = 9^^J#I     extended autos^^J#I     computed stabilizer^^J#I     got quotient^^J#I     induced autos^^J#I  layer 5 of dim 145 aut group has order 7200 * 2^496^^J#I     cover is determined^^J#I     dim(M) = 73 and dim(U) = 9^^J#I     extended autos^^J#I     computed stabilizer^^J#I     got quotient^^J#I     induced autos^^J#I    Layer 5 yields bins [ [ 1, 2 ] ]^^J#I  layer 6 of dim 231 aut group has order 7200 * 2^800^^J#I     cover is determined^^J#I     dim(M) = 95 and dim(U) = 9^^J#I     extended autos^^J#I     computed stabilizer^^J#I     got quotient^^J^CError, user interrupt in^^J  AddRowVector( u, GetEntryTable( T, i, j ), v[i] * w[j]^^J ); at /home/leo/gap-4.10.1/pkg/modisom-2.5.3/gap/tables/tables.gi:87 called from^^JMultByTable( Q, new[Q.wds[i][1]], new[Q.wds[i][2]]^^J ) at /home/leo/gap-4.10.1/pkg/modisom-2.5.3/gap/autiso/induc.gi:135 called from^^JInduceAutoToQuot( Q, G.agAutos[i]^^J ) at /home/leo/gap-4.10.1/pkg/modisom-2.5.3/gap/autiso/induc.gi:151 called from^^JInduceAutosToQuot( G, Q^^J ); at /home/leo/gap-4.10.1/pkg/modisom-2.5.3/gap/autiso/autiso.gi:57 called from^^JExtendCanoForm( tabs[i], j^^J ); at /home/leo/gap-4.10.1/pkg/modisom-2.5.3/gap/grpalg/chkbins.gi:117 called from^^JMIPBinSplit( p, n, false, start, step, list, f^^J ) at /home/leo/gap-4.10.1/pkg/modisom-2.5.3/gap/grpalg/chkbins.gi:177 called from^^J...  at *stdin*:39^^Jyou can 'return;'^^Jbrk> quit;   # this was not progressing for several hours^^J^^Jgap> Size(G) = Size(H);^^Jtrue^^Jgap> Size(G) = 2^10;^^Jtrue^^J^^Jgap> MIPBinSplit(2, 10, 4, 4, 1, [G,H], 2);^^J#I  Refine bin^^J#I    Weights yields bins [ [ 1, 2 ] ]^^J#I    Layer 1 yields bins [ [ 1, 2 ] ]^^J#I  layer 2 of dim 15 aut group has order 2961100800 * 2^0^^J#I     cover is determined^^J#I     dim(M) = 16 and dim(U) = 5^^J#I     extended autos^^J#I     computed stabilizer^^J#I     got quotient^^J#I     induced autos^^J#I  layer 2 of dim 15 aut group has order 2961100800 * 2^0^^J#I     cover is determined^^J#I     dim(M) = 16 and dim(U) = 5^^J#I     extended autos^^J#I     computed stabilizer^^J#I     got quotient^^J#I     induced autos^^J#I    Layer 2 yields bins [ [ 1, 2 ] ]^^J#I  layer 3 of dim 39 aut group has order 2937600 * 2^88^^J#I     cover is determined^^J#I     dim(M) = 29 and dim(U) = 5^^J#I     extended autos^^J#I     computed stabilizer^^J#I     got quotient^^J#I     induced autos^^J#I  layer 3 of dim 39 aut group has order 2937600 * 2^88^^J#I     cover is determined^^J#I     dim(M) = 29 and dim(U) = 5^^J#I     extended autos^^J#I     computed stabilizer^^J#I     got quotient^^J#I     induced autos^^J#I    Layer 3 yields bins [ [ 1, 2 ] ]^^J#I  layer 4 of dim 81 aut group has order 2937600 * 2^240^^J#I     cover is determined^^J#I     dim(M) = 51 and dim(U) = 9^^J#I     extended autos^^J#I     computed stabilizer^^J#I     got quotient^^J#I     induced autos^^J#I  layer 4 of dim 81 aut group has order 2937600 * 2^240^^J#I     cover is determined^^J#I     dim(M) = 51 and dim(U) = 9^^J#I     extended autos^^J#I     computed stabilizer^^J#I     got quotient^^J#I     induced autos^^J#I    Layer 4 yields bins [ [ 1, 2 ] ]^^Jrec(^^J  bins :=^^J    [^^J      [ Group([ f1, f2, f7, f3, f4, f10, f5, f6, f7, f8, f9, f10 ]),^^J          Group([ f1, f2, f7, f3, f4, f10, f5, f6, f7, f8, f9, f10 ]) ] ],^^J  splits := [  ], time := 9469981 )^^J
gap> G := SmallGroup(64, 20);^^J<pc group of size 64 with 6 generators>^^Jgap> H := SmallGroup(64, 22);^^J<pc group of size 64 with 6 generators>^^Jgap> TG := ModIsomTable(G, 5);;^^Jgap> TH := ModIsomTable(H, 5);;^^Jgap> KernelSizePowerMap(TG, 1, 1, 2);^^J3^^Jgap> KernelSizePowerMap(TH, 1, 1, 2);^^J1
gap> TG := ModIsomTable(G, 5, 2);;^^Jgap> TH := ModIsomTable(H, 5, 2);;^^Jgap> KernelSizePowerMap(TG, 1, 1, 2);^^J7^^Jgap> KernelSizePowerMap(TH, 1, 1, 2);^^J7
